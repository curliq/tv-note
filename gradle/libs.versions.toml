[versions]
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
accompanistNavigationMaterial = "0.35.0-alpha"
agp = "8.6.0-alpha07"
androidx-activityCompose = "1.9.3"
androidx-appcompat = "1.7.0"
billingAndroid = "7.1.1"
compose = "1.7.6"
compose-plugin = "1.8.0-alpha01"
coreSplashscreen = "1.0.1"
foundation = "1.7.0-dev1690"
landscapistCoil3 = "2.4.2"
opencsv = "5.9"
posthogAndroid = "3.4.2"
sentryKotlinMultiplatform = "0.10.0"
sentrySpring = "7.11.0"
sentryLogback = "7.3.0"
sqldelightCoroutinesExtensions = "1.5.5"
firebaseAdmin = "9.4.0"
firebaseMessaging = "24.1.0"
koinCore = "3.5.3"
kotlin = "2.1.0-RC"
kotlinxCoroutinesCore = "1.9.0"
kotlinxDatetime = "0.6.0"
kotlinxSerializationJson = "1.7.3"
ktorClient = "3.0.1"
logbackClassic = "1.5.12"
mockk = "1.13.10"
navigationCompose = "2.8.5"
sqldelight = "1.5.5"
slf4jAndroid = "1.7.36"
spring = "3.4.0"
flyway = "10.11.1"
lifecycle_version = "2.8.7"
turbine = "1.1.0"
uuid = "0.8.4"

[libraries]
accompanist-navigation-material = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanistNavigationMaterial" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
billing = { module = "com.android.billingclient:billing", version.ref = "billingAndroid" }
billing-ktx = { module = "com.android.billingclient:billing-ktx", version.ref = "billingAndroid" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "foundation" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
landscapist-coil3 = { module = "com.github.skydoves:landscapist-coil3", version.ref = "landscapistCoil3" }
opencsv = { module = "com.opencsv:opencsv", version.ref = "opencsv" }
posthog-android = { module = "com.posthog:posthog-android", version.ref = "posthogAndroid" }
sentry-kotlin-multiplatform = { module = "io.sentry:sentry-kotlin-multiplatform", version.ref = "sentryKotlinMultiplatform" }
sentry-logback = { module = "io.sentry:sentry-logback", version.ref = "sentryLogback" }
sentry-spring-boot-starter-jakarta = { module = "io.sentry:sentry-spring-boot-starter-jakarta", version.ref = "sentrySpring" }
sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelightCoroutinesExtensions" }
firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebaseAdmin" }
firebase-fcm-android = { module = "com.google.firebase:firebase-messaging", version.ref = "firebaseMessaging" }
firebase-fcm-android-ktx = { module = "com.google.firebase:firebase-messaging-ktx", version.ref = "firebaseMessaging" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinCore" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCore" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koinCore" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle_version" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle_version" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesCore" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerializationJson" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClient" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClient" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorClient" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClient" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClient" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClient" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClient" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
sqldelight-native-driver = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
slf4j-android = { module = "org.slf4j:slf4j-android", version.ref = "slf4jAndroid" }
springBootJdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc" }
springBootJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
springBootSecurity = { module = "org.springframework.boot:spring-boot-starter-security" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
jjtw = { module = "io.jsonwebtoken:jjwt", version = "0.12.3" }
flywayPostgres = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
postgres = { module = "org.postgresql:postgresql", version = "42.7.4" }
sqlite-driver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelightCoroutinesExtensions" }
testSpringBoot = { module = "org.springframework.boot:spring-boot-starter-test" }
testSpringBootSecurity = { module = "org.springframework.security:spring-security-test" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
springBoot = { id = "org.springframework.boot", version.ref = "spring" }
sprintBootDependency = { id = "io.spring.dependency-management", version = "1.1.4" }
springBootKotlin = { id = "org.jetbrains.kotlin.plugin.spring", version = "1.9.21" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
googleServicesAndroid = { id = "com.google.gms.google-services", version = "4.4.2" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
